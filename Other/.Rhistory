library(wordcloud)
library(RColorBrewer)
set.seed(1234)  # You can use any number, but keep it constant
wordcloud(
words = df$Tool,
freq = df[["Ratings Number"]],
min.freq = 1,
max.words = 100,
random.order = FALSE,
rot.per = 0.1,
colors = brewer.pal(8, "Dark2"),
scale = c(4, 0.7)
)
library(ggplot2)
# Reorder tools by descending Ratings Number
df$Tool <- factor(df$Tool, levels = df$Tool[order(-df[["Ratings Number"]])])
# Create vertical bar chart
ggplot(df, aes(x = Tool, y = `Ratings Number`, fill = Tool)) +
geom_col(show.legend = FALSE) +
labs(
title = "BI Tools by Number of Ratings",
x = "Tool",
y = "Ratings Number"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
library(kableExtra)
# Core scoring formulas
df$"Scoring1" <- round(df$Review * df[["Ratings Number"]], 0)                # Review × Ratings
df$"Scoring2" <- round(df$Review * sqrt(df[["Ratings Number"]]), 0)          # Review × √Ratings
df$"Scoring3" <- round(df$Review * log(df[["Ratings Number"]]), 1)           # Review × log(Ratings)
df$"Scoring4" <- round(df$Review^2 * df[["Ratings Number"]], 0)              # Review² × Ratings
df$"Scoring5" <- round(df$Review^2 * sqrt(df[["Ratings Number"]]), 0)        # Review² × √Ratings
df$"Scoring6" <- round(df$Review^2 * log(df[["Ratings Number"]]), 0)         # Review² × log(Ratings)
df %>%
kbl(
caption = "BI Tools Scoring Table",
col.names = c(
"Gartner's Ranking", "Tool", "Ratings Number", "Review",
"Scoring1", "Scoring2", "Scoring3",
"Scoring4", "Scoring5", "Scoring6"
)
) %>%
kable_styling(
full_width = FALSE,
bootstrap_options = c("striped", "hover", "condensed"),
position = "center"
) %>%
scroll_box(width = "100%")
library(dplyr)
# Rank: Review × Ratings
df <- df %>%
arrange(desc(`Scoring1`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring1` = row_number())
# Rank: Review × √Ratings
df <- df %>%
arrange(desc(`Scoring2`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring2` = row_number())
# Rank: Review × log(Ratings)
df <- df %>%
arrange(desc(`Scoring3`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring3` = row_number())
# Rank: Review² × Ratings
df <- df %>%
arrange(desc(`Scoring4`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring4` = row_number())
# Rank: Review² × √Ratings
df <- df %>%
arrange(desc(`Scoring5`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring5` = row_number())
# Rank: Review² × log(Ratings)
df <- df %>%
arrange(desc(`Scoring6`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring6` = row_number())
# Calculate average and standard deviation of ranks
rank_columns <- grep("^Rank:", names(df), value = TRUE)
df$`Rank Average` <- round(rowMeans(df[rank_columns]), 1)
df$`Rank Std Dev` <- round(apply(df[rank_columns], 1, sd), 1)
# Sorting the final ranking by lowest Rank Average
df <- df[order(df$`Rank Average`, df$`Rank Std Dev`), ]
# Indexing the final ranking using the Rank Average resulting from each scoring system
df$`Temporary Ranking` <- seq_len(nrow(df))
df[, c("Tool", "Review", "Ratings Number", "Rank Average", "Rank Std Dev", "New Ranking")] %>%
kbl(
caption = "Summary of BI Tool Scores and Rankings",
col.names = c("Tool", "Review", "Ratings Number", "Rank Average", "Rank Std Dev", "Temporary Ranking")
) %>%
kable_styling(
full_width = FALSE,
bootstrap_options = c("striped", "hover", "condensed"),
position = "center"
)
# Indexing the final ranking using the Rank Average resulting from each scoring system
df$`Temporary Ranking` <- seq_len(nrow(df))
df[, c("Tool", "Review", "Ratings Number", "Rank Average", "Rank Std Dev", "Temporary Ranking")] %>%
kbl(
caption = "Summary of BI Tool Scores and Rankings",
col.names = c("Tool", "Review", "Ratings Number", "Rank Average", "Rank Std Dev", "Temporary Ranking")
) %>%
kable_styling(
full_width = FALSE,
bootstrap_options = c("striped", "hover", "condensed"),
position = "center"
)
install.packages("webshot2")
webshot2::install_phantomjs()
webshot2::install_phantomjs()
# Import Excel sheet
library(readxl)
library(kableExtra)
df <- read_excel("C:/Users/dinho2/Medtronic PLC/Team - Thesis - Thesis/Thesis/4. References/R - BI Tools/BI Tools.xlsx", sheet = "4. Top 30 - Gartner")
knitr::kable(
df,
caption = "Gartner Top 30 BI Tools",
format = "pipe"  # optional, safe default for all outputs
)
library(kableExtra)
# Core scoring formulas
df$"Scoring1" <- round(df$Review * df[["Ratings Number"]], 0)                # Review × Ratings
df$"Scoring2" <- round(df$Review * sqrt(df[["Ratings Number"]]), 0)          # Review × √Ratings
df$"Scoring3" <- round(df$Review * log(df[["Ratings Number"]]), 1)           # Review × log(Ratings)
df$"Scoring4" <- round(df$Review^2 * df[["Ratings Number"]], 0)              # Review² × Ratings
df$"Scoring5" <- round(df$Review^2 * sqrt(df[["Ratings Number"]]), 0)        # Review² × √Ratings
df$"Scoring6" <- round(df$Review^2 * log(df[["Ratings Number"]]), 0)         # Review² × log(Ratings)
knitr::kable(
df,
caption = "BI Tools Scoring Table",
col.names = c(
"Gartner's Ranking", "Tool", "Ratings Number", "Review",
"Scoring1", "Scoring2", "Scoring3",
"Scoring4", "Scoring5", "Scoring6"
)
)
knitr::opts_chunk$set(echo = TRUE)
# Import Excel sheet
library(readxl)
library(kableExtra)
df <- read_excel("C:/Users/dinho2/Medtronic PLC/Team - Thesis - Thesis/Thesis/4. References/R - BI Tools/BI Tools.xlsx", sheet = "4. Top 30 - Gartner")
knitr::kable(
df,
caption = "Gartner Top 30 BI Tools",
format = "pipe"  # optional, safe default for all outputs
)
# Remove text in parentheses (and the parentheses themselves)
df$Tool <- gsub("\\s*\\(.*?\\)", "", df$Tool)
# Trim leading/trailing whitespace
df$Tool <- trimws(df$Tool)
# Shortening names
df$Tool <- gsub("Microsoft Power BI", "Power BI", df$Tool)
df$Tool <- gsub("SAP BusinessObjects BI Suite", "SAP Analytics", df$Tool)
#df$Tool <- gsub("Oracle Analytics", "Oracle", df$Tool)
#df$Tool <- gsub("Amazon QuickSight", "Amazon", df$Tool)
df$Tool <- gsub("Sisense Fusion Analytics", "Sisense Analytics", df$Tool)
df$Tool <- gsub("IBM Cognos Analytics", "IBM Analytics", df$Tool)
#df$Tool <- gsub("Diver Platform", "Diver", df$Tool)
#df$Tool <- gsub("ThoughtSpot Analytics", "ThoughtSpot", df$Tool)
#df$Tool <- gsub("Zoho Analytics", "Zoho", df$Tool)
df$Tool <- gsub("Pyramid Decision Intelligence Platform", "Pyramid", df$Tool)
df$Tool <- gsub("Databricks Data Intelligence Platform", "Databricks", df$Tool)
#df$Tool <- gsub("Alibaba Quick BI", "Alibaba", df$Tool)
df$Tool <- gsub("Alteryx One Platform", "Alteryx", df$Tool)
library(wordcloud)
library(RColorBrewer)
set.seed(1234)  # You can use any number, but keep it constant
wordcloud(
words = df$Tool,
freq = df[["Ratings Number"]],
min.freq = 1,
max.words = 100,
random.order = FALSE,
rot.per = 0.1,
colors = brewer.pal(8, "Dark2"),
scale = c(4, 0.7)
)
library(ggplot2)
# Reorder tools by descending Ratings Number
df$Tool <- factor(df$Tool, levels = df$Tool[order(-df[["Ratings Number"]])])
# Create vertical bar chart
ggplot(df, aes(x = Tool, y = `Ratings Number`, fill = Tool)) +
geom_col(show.legend = FALSE) +
labs(
title = "BI Tools by Number of Ratings",
x = "Tool",
y = "Ratings Number"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
library(kableExtra)
# Core scoring formulas
df$"Scoring1" <- round(df$Review * df[["Ratings Number"]], 0)                # Review × Ratings
df$"Scoring2" <- round(df$Review * sqrt(df[["Ratings Number"]]), 0)          # Review × √Ratings
df$"Scoring3" <- round(df$Review * log(df[["Ratings Number"]]), 1)           # Review × log(Ratings)
df$"Scoring4" <- round(df$Review^2 * df[["Ratings Number"]], 0)              # Review² × Ratings
df$"Scoring5" <- round(df$Review^2 * sqrt(df[["Ratings Number"]]), 0)        # Review² × √Ratings
df$"Scoring6" <- round(df$Review^2 * log(df[["Ratings Number"]]), 0)         # Review² × log(Ratings)
knitr::kable(
df,
caption = "BI Tools Scoring Table",
col.names = c(
"Gartner's Ranking", "Tool", "Ratings Number", "Review",
"Scoring1", "Scoring2", "Scoring3",
"Scoring4", "Scoring5", "Scoring6"
)
)
knitr::opts_chunk$set(echo = TRUE)
# Import Excel sheet
library(readxl)
library(kableExtra)
df <- read_excel("C:/Users/dinho2/Medtronic PLC/Team - Thesis - Thesis/Thesis/4. References/R - BI Tools/BI Tools.xlsx", sheet = "4. Top 30 - Gartner")
knitr::kable(
df,
caption = "Gartner Top 30 BI Tools",
format = "pipe"  # optional, safe default for all outputs
)
# Remove text in parentheses (and the parentheses themselves)
df$Tool <- gsub("\\s*\\(.*?\\)", "", df$Tool)
# Trim leading/trailing whitespace
df$Tool <- trimws(df$Tool)
# Shortening names
df$Tool <- gsub("Microsoft Power BI", "Power BI", df$Tool)
df$Tool <- gsub("SAP BusinessObjects BI Suite", "SAP Analytics", df$Tool)
#df$Tool <- gsub("Oracle Analytics", "Oracle", df$Tool)
#df$Tool <- gsub("Amazon QuickSight", "Amazon", df$Tool)
df$Tool <- gsub("Sisense Fusion Analytics", "Sisense Analytics", df$Tool)
df$Tool <- gsub("IBM Cognos Analytics", "IBM Analytics", df$Tool)
#df$Tool <- gsub("Diver Platform", "Diver", df$Tool)
#df$Tool <- gsub("ThoughtSpot Analytics", "ThoughtSpot", df$Tool)
#df$Tool <- gsub("Zoho Analytics", "Zoho", df$Tool)
df$Tool <- gsub("Pyramid Decision Intelligence Platform", "Pyramid", df$Tool)
df$Tool <- gsub("Databricks Data Intelligence Platform", "Databricks", df$Tool)
#df$Tool <- gsub("Alibaba Quick BI", "Alibaba", df$Tool)
df$Tool <- gsub("Alteryx One Platform", "Alteryx", df$Tool)
library(wordcloud)
library(RColorBrewer)
set.seed(1234)  # You can use any number, but keep it constant
wordcloud(
words = df$Tool,
freq = df[["Ratings Number"]],
min.freq = 1,
max.words = 100,
random.order = FALSE,
rot.per = 0.1,
colors = brewer.pal(8, "Dark2"),
scale = c(4, 0.7)
)
library(ggplot2)
# Reorder tools by descending Ratings Number
df$Tool <- factor(df$Tool, levels = df$Tool[order(-df[["Ratings Number"]])])
# Create vertical bar chart
ggplot(df, aes(x = Tool, y = `Ratings Number`, fill = Tool)) +
geom_col(show.legend = FALSE) +
labs(
title = "BI Tools by Number of Ratings",
x = "Tool",
y = "Ratings Number"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
library(kableExtra)
# Core scoring formulas
df$"Scoring1" <- round(df$Review * df[["Ratings Number"]], 0)                # Review × Ratings
df$"Scoring2" <- round(df$Review * sqrt(df[["Ratings Number"]]), 0)          # Review × √Ratings
df$"Scoring3" <- round(df$Review * log(df[["Ratings Number"]]), 1)           # Review × log(Ratings)
df$"Scoring4" <- round(df$Review^2 * df[["Ratings Number"]], 0)              # Review² × Ratings
df$"Scoring5" <- round(df$Review^2 * sqrt(df[["Ratings Number"]]), 0)        # Review² × √Ratings
df$"Scoring6" <- round(df$Review^2 * log(df[["Ratings Number"]]), 0)         # Review² × log(Ratings)
knitr::kable(
df,
caption = "BI Tools Scoring Table",
col.names = c(
"Gartner's Ranking", "Tool", "Ratings Number", "Review",
"Scoring1", "Scoring2", "Scoring3",
"Scoring4", "Scoring5", "Scoring6"
)
)
library(dplyr)
# Rank: Review × Ratings
df <- df %>%
arrange(desc(`Scoring1`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring1` = row_number())
# Rank: Review × √Ratings
df <- df %>%
arrange(desc(`Scoring2`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring2` = row_number())
# Rank: Review × log(Ratings)
df <- df %>%
arrange(desc(`Scoring3`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring3` = row_number())
# Rank: Review² × Ratings
df <- df %>%
arrange(desc(`Scoring4`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring4` = row_number())
# Rank: Review² × √Ratings
df <- df %>%
arrange(desc(`Scoring5`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring5` = row_number())
# Rank: Review² × log(Ratings)
df <- df %>%
arrange(desc(`Scoring6`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring6` = row_number())
# Calculate average and standard deviation of ranks
rank_columns <- grep("^Rank:", names(df), value = TRUE)
df$`Rank Average` <- round(rowMeans(df[rank_columns]), 1)
df$`Rank Std Dev` <- round(apply(df[rank_columns], 1, sd), 1)
# Sorting the final ranking by lowest Rank Average
df <- df[order(df$`Rank Average`, df$`Rank Std Dev`), ]
# Indexing the final ranking using the Rank Average resulting from each scoring system
df$`Temporary Ranking` <- seq_len(nrow(df))
knitr::kable(
df[, c("Tool", "Review", "Ratings Number", "Rank Average", "Rank Std Dev", "Temporary Ranking")],
caption = "Summary of BI Tool Scores and Temporary Ranking",
col.names = c("Tool", "Review", "Ratings Number", "Rank Average", "Rank Std Dev", "Temporary Ranking")
)
# Step 1: Compare each score ranking to the final New Ranking
rank_columns <- grep("^Rank:", names(df), value = TRUE)
# Step 2: Count how many times each scoring method matches New Ranking
match_counts <- sapply(rank_columns, function(col) {
sum(df[[col]] == df$`Temporary Ranking`, na.rm = TRUE)
})
# Step 3: Convert to data frame
match_df <- data.frame(
ScoringMethod = rank_columns,
MatchesFinalRank = as.numeric(match_counts)
)
# Step 4: Sort descending by match count
match_df <- match_df[order(-match_df$MatchesFinalRank), ]
# Step 5: View results
knitr::kable(
match_df,
caption = "Counting Match Between Scoring Methods and Final Ranking",
col.names = c("Scoring Method", "Exact Matches with Final Rank")
)
knitr::opts_chunk$set(echo = TRUE)
# Import Excel sheet
library(readxl)
df <- read_excel("C:/Users/dinho2/Medtronic PLC/Team - Thesis - Thesis/Thesis/4. References/R - BI Tools/BI Tools.xlsx", sheet = "4. Top 30 - Gartner")
knitr::kable(
df,
caption = "Gartner Top 30 BI Tools",
format = "pipe"  # optional, safe default for all outputs
)
# Remove text in parentheses (and the parentheses themselves)
df$Tool <- gsub("\\s*\\(.*?\\)", "", df$Tool)
# Trim leading/trailing whitespace
df$Tool <- trimws(df$Tool)
# Shortening names
df$Tool <- gsub("Microsoft Power BI", "Power BI", df$Tool)
df$Tool <- gsub("SAP BusinessObjects BI Suite", "SAP Analytics", df$Tool)
#df$Tool <- gsub("Oracle Analytics", "Oracle", df$Tool)
#df$Tool <- gsub("Amazon QuickSight", "Amazon", df$Tool)
df$Tool <- gsub("Sisense Fusion Analytics", "Sisense Analytics", df$Tool)
df$Tool <- gsub("IBM Cognos Analytics", "IBM Analytics", df$Tool)
#df$Tool <- gsub("Diver Platform", "Diver", df$Tool)
#df$Tool <- gsub("ThoughtSpot Analytics", "ThoughtSpot", df$Tool)
#df$Tool <- gsub("Zoho Analytics", "Zoho", df$Tool)
df$Tool <- gsub("Pyramid Decision Intelligence Platform", "Pyramid", df$Tool)
df$Tool <- gsub("Databricks Data Intelligence Platform", "Databricks", df$Tool)
#df$Tool <- gsub("Alibaba Quick BI", "Alibaba", df$Tool)
df$Tool <- gsub("Alteryx One Platform", "Alteryx", df$Tool)
library(wordcloud)
library(RColorBrewer)
set.seed(1234)  # You can use any number, but keep it constant
wordcloud(
words = df$Tool,
freq = df[["Ratings Number"]],
min.freq = 1,
max.words = 100,
random.order = FALSE,
rot.per = 0.1,
colors = brewer.pal(8, "Dark2"),
scale = c(4, 0.7)
)
library(ggplot2)
# Reorder tools by descending Ratings Number
df$Tool <- factor(df$Tool, levels = df$Tool[order(-df[["Ratings Number"]])])
# Create vertical bar chart
ggplot(df, aes(x = Tool, y = `Ratings Number`, fill = Tool)) +
geom_col(show.legend = FALSE) +
labs(
title = "BI Tools by Number of Ratings",
x = "Tool",
y = "Ratings Number"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
# Core scoring formulas
df$"Scoring1" <- round(df$Review * df[["Ratings Number"]], 0)                # Review × Ratings
df$"Scoring2" <- round(df$Review * sqrt(df[["Ratings Number"]]), 0)          # Review × √Ratings
df$"Scoring3" <- round(df$Review * log(df[["Ratings Number"]]), 1)           # Review × log(Ratings)
df$"Scoring4" <- round(df$Review^2 * df[["Ratings Number"]], 0)              # Review² × Ratings
df$"Scoring5" <- round(df$Review^2 * sqrt(df[["Ratings Number"]]), 0)        # Review² × √Ratings
df$"Scoring6" <- round(df$Review^2 * log(df[["Ratings Number"]]), 0)         # Review² × log(Ratings)
knitr::kable(
df,
caption = "BI Tools Scoring Table",
col.names = c(
"Gartner's Ranking", "Tool", "Ratings Number", "Review",
"Scoring1", "Scoring2", "Scoring3",
"Scoring4", "Scoring5", "Scoring6"
)
)
library(dplyr)
# Rank: Review × Ratings
df <- df %>%
arrange(desc(`Scoring1`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring1` = row_number())
# Rank: Review × √Ratings
df <- df %>%
arrange(desc(`Scoring2`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring2` = row_number())
# Rank: Review × log(Ratings)
df <- df %>%
arrange(desc(`Scoring3`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring3` = row_number())
# Rank: Review² × Ratings
df <- df %>%
arrange(desc(`Scoring4`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring4` = row_number())
# Rank: Review² × √Ratings
df <- df %>%
arrange(desc(`Scoring5`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring5` = row_number())
# Rank: Review² × log(Ratings)
df <- df %>%
arrange(desc(`Scoring6`), desc(`Ratings Number`)) %>%
mutate(`Rank: Scoring6` = row_number())
# Calculate average and standard deviation of ranks
rank_columns <- grep("^Rank:", names(df), value = TRUE)
df$`Rank Average` <- round(rowMeans(df[rank_columns]), 1)
df$`Rank Std Dev` <- round(apply(df[rank_columns], 1, sd), 1)
# Sorting the final ranking by lowest Rank Average
df <- df[order(df$`Rank Average`, df$`Rank Std Dev`), ]
# Indexing the final ranking using the Rank Average resulting from each scoring system
df$`Temporary Ranking` <- seq_len(nrow(df))
knitr::kable(
df[, c("Tool", "Review", "Ratings Number", "Rank Average", "Rank Std Dev", "Temporary Ranking")],
caption = "Summary of BI Tool Scores and Temporary Ranking",
col.names = c("Tool", "Review", "Ratings Number", "Rank Average", "Rank Std Dev", "Temporary Ranking")
)
library(reshape2)
library(ggplot2)
# Step 1: Extract only ranking columns and Tool
rank_columns <- grep("^Rank:", names(df), value = TRUE)
ranking_matrix <- df[, c("Tool", rank_columns)]
# Step 2: Melt into long format
ranking_long <- melt(ranking_matrix, id.vars = "Tool", variable.name = "Scoring Method", value.name = "Rank")
# Step 3: Merge with Rank Average to reorder Tool correctly
ranking_long <- merge(ranking_long, df[, c("Tool", "Rank Average")], by = "Tool")
# Step 4: Heatmap
ggplot(ranking_long, aes(x = `Scoring Method`, y = reorder(Tool, `Rank Average`))) +
geom_tile(aes(fill = Rank)) +
scale_fill_gradient(low = "black", high = "white", name = "Rank") +
labs(
title = "Heatmap of BI Tool Rankings Across Scoring Methods",
x = "Scoring Method",
y = "BI Tool"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 6)
)
# Step 1: Compare each score ranking to the final New Ranking
rank_columns <- grep("^Rank:", names(df), value = TRUE)
# Step 2: Count how many times each scoring method matches New Ranking
match_counts <- sapply(rank_columns, function(col) {
sum(df[[col]] == df$`Temporary Ranking`, na.rm = TRUE)
})
# Step 3: Convert to data frame
match_df <- data.frame(
ScoringMethod = rank_columns,
MatchesFinalRank = as.numeric(match_counts)
)
# Step 4: Sort descending by match count
match_df <- match_df[order(-match_df$MatchesFinalRank), ]
# Step 5: View results
match_df %>%
kbl(
caption = "Counting Match Between Scoring Methods and Final Ranking",
col.names = c("Scoring Method", "Exact Matches with Final Rank")
) %>%
kable_styling(
full_width = FALSE,
bootstrap_options = c("striped", "hover", "condensed"),
position = "center"
)
# Step 1: Compare each score ranking to the final New Ranking
rank_columns <- grep("^Rank:", names(df), value = TRUE)
# Step 2: Count how many times each scoring method matches New Ranking
match_counts <- sapply(rank_columns, function(col) {
sum(df[[col]] == df$`Temporary Ranking`, na.rm = TRUE)
})
# Step 3: Convert to data frame
match_df <- data.frame(
ScoringMethod = rank_columns,
MatchesFinalRank = as.numeric(match_counts)
)
# Step 4: Sort descending by match count
match_df <- match_df[order(-match_df$MatchesFinalRank), ]
# Step 5: View results
knitr::kable(
match_df,
caption = "Counting Match Between Scoring Methods and Final Ranking",
col.names = c("Scoring Method", "Exact Matches with Final Rank")
)
df <- df[, c("Rank: Scoring3", "Gartner's Ranking", "Tool", "Ratings Number", "Review", "Scoring3")]
df %>%
arrange(`Rank: Scoring3`) %>%
knitr::kable(
caption = "Filtered BI Tools Scoring Table",
col.names = c("Final Ranking", "Gartner's Ranking", "Tool", "Ratings Number", "Review", "Score")
)
